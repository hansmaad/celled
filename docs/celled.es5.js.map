{"version":3,"file":"celled.es5.js","sources":["../src/lib/events.ts","../src/lib/csv.ts","../src/lib/dom.ts","../src/lib/css.ts","../src/lib/cell.ts","../src/lib/row.ts","../src/lib/render.ts","../src/lib/grid.ts"],"sourcesContent":["\r\nexport interface EventArgs { }\r\n\r\nexport type EventHandlerBase = (arg: EventArgs) => any;\r\n\r\nexport interface EventHandler<T> extends EventHandlerBase {\r\n    (arg: T): any;\r\n}\r\n\r\nexport class EventEmitter {\r\n    handlers: { [event: string]: EventHandlerBase[] } = {};\r\n\r\n    addHandler(event: string, handler: EventHandlerBase) {\r\n        const handlers = this.handlers;\r\n        handlers[event] = handlers[event] || [];\r\n        handlers[event].push(handler);\r\n    }\r\n\r\n    removeHandler(event: string, handler: EventHandlerBase) {\r\n        const allHandlers = this.handlers;\r\n        const handlers = allHandlers[event];\r\n        if (handlers && handler) {\r\n            handlers.splice(handlers.indexOf(handler), 1);\r\n        }\r\n    }\r\n\r\n    emit<TArgs extends EventArgs>(event: string, args: TArgs) {\r\n        const handlers = this.handlers[event];\r\n        if (handlers) {\r\n           handlers.forEach(handler => {\r\n                try {\r\n                    handler(args);\r\n                }\r\n                catch {}\r\n            });\r\n        }\r\n    }\r\n}\r\n","// ref: https://stackoverflow.com/a/14991797/498298\r\n// This will parse a delimited string into an array of\r\n// arrays. The default delimiter is the comma, but this\r\n// can be overriden in the second argument.\r\nexport function parseCSV(str: string, delimiter: string) {\r\n    const arr: string[][] = [];\r\n    let quote = false;  // 'true' means we're inside a quoted field\r\n\r\n    // Iterate over each character, keep track of current row and column (of the returned array)\r\n    for (let row = 0, col = 0, i = 0; i < str.length; i++) {\r\n        const currentChar = str[i];\r\n        const nextChar = str[i + 1];\r\n        arr[row] = arr[row] || [];             // Create a new row if necessary\r\n        arr[row][col] = arr[row][col] || '';   // Create a new column (start with empty string) if necessary\r\n\r\n        // If the current character is a quotation mark, and we're inside a\r\n        // quoted field, and the next character is also a quotation mark,\r\n        // add a quotation mark to the current column and skip the next character\r\n        if (currentChar === '\"' && quote && nextChar === '\"') {\r\n            arr[row][col] += currentChar;\r\n            ++i;\r\n            continue;\r\n        }\r\n\r\n        // If it's just one quotation mark, begin/end quoted field\r\n        if (currentChar === '\"') {\r\n            quote = !quote;\r\n            continue;\r\n        }\r\n\r\n        // If it's a delimiter and we're not in a quoted field, move on to the next column\r\n        if (currentChar === delimiter && !quote) {\r\n            ++col;\r\n            continue;\r\n        }\r\n\r\n        // If it's a newline (CRLF) and we're not in a quoted field, skip the next character\r\n        // and move on to the next row and move to column 0 of that new row\r\n        if (currentChar === '\\r' && nextChar === '\\n' && !quote) {\r\n            ++row;\r\n            col = 0;\r\n            ++i;\r\n            continue;\r\n        }\r\n\r\n        // If it's a newline (LF or CR) and we're not in a quoted field,\r\n        // move on to the next row and move to column 0 of that new row\r\n        if ((currentChar === '\\n' || currentChar === '\\r') && !quote) {\r\n            ++row;\r\n            col = 0;\r\n            continue;\r\n        }\r\n\r\n        // Otherwise, append the current character to the current column\r\n        arr[row][col] += currentChar;\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\nexport function writeCSV(values: Array<string[]>, separator: string, linebreak = '\\n') {\r\n\r\n    let content = '';\r\n    values.forEach((row, ri) => {\r\n        if (ri > 0) {\r\n            content += linebreak;\r\n        }\r\n        row.forEach((cell, ci) => {\r\n            cell = cell.replace(/\"/g, '\"\"');\r\n            if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n                cell = '\"' + cell + '\"';\r\n            }\r\n            if (ci > 0) {\r\n                content += separator;\r\n            }\r\n            content += cell;\r\n        });\r\n    });\r\n    return content;\r\n\r\n}\r\n","export function query<T = Element>(elOrCss, cssSelector?): T {\r\n    if (!cssSelector) {\r\n        cssSelector = elOrCss;\r\n        elOrCss = document;\r\n    }\r\n    return elOrCss.querySelector(cssSelector);\r\n}\r\n\r\nexport function queryAll<T = Element>(elOrCss, cssSelector?): T[] {\r\n    if (!cssSelector) {\r\n        cssSelector = elOrCss;\r\n        elOrCss = document;\r\n    }\r\n    return [].slice.call(elOrCss.querySelectorAll(cssSelector));\r\n}\r\n\r\nexport function createElement<T extends HTMLElement>(html: string): T {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild as T;\r\n}\r\n\r\nexport function on(element: Node, event: string, listener: EventListenerOrEventListenerObject) {\r\n    element.addEventListener(event, listener);\r\n    return offFunc(element, event, listener);\r\n}\r\n\r\nexport function off(element: Node, event: string, listener: EventListenerOrEventListenerObject) {\r\n    element.removeEventListener(event, listener);\r\n}\r\n\r\nexport function offFunc(element: Node, event: string, listener: EventListenerOrEventListenerObject) {\r\n    return () => element.removeEventListener(event, listener);\r\n}\r\n\r\nexport function getKey(e: KeyboardEvent) {\r\n    e = e || window.event as KeyboardEvent;\r\n    return String.fromCharCode(e.keyCode || e.which);\r\n}\r\n\r\nexport function remove(node: Node) {\r\n    if (node.parentNode) {\r\n        node.parentElement.removeChild(node);\r\n    }\r\n}\r\n\r\nexport function setOptions(selectElement: HTMLSelectElement, options: ReadonlyArray<any>) {\r\n    for (let i = selectElement.options.length; i > 0; i--) {\r\n        selectElement.remove(i);\r\n    }\r\n    for (const option of options) {\r\n        const optionElement = document.createElement('option');\r\n        optionElement.value = '' + option;\r\n        optionElement.innerHTML = '' + option;\r\n        selectElement.appendChild(optionElement);\r\n    }\r\n}\r\n","export const CSS_PREFIX = 'ced';\r\nexport const CSS_CONTAINER = `${CSS_PREFIX}-grid-container`;\r\nexport const CSS_CONTAINER_SCROLL = `${CSS_PREFIX}-grid-container-scroll`;\r\nexport const CSS_GRID = `${CSS_PREFIX}-grid`;\r\nexport const CSS_ROW = `${CSS_PREFIX}-row`;\r\nexport const CSS_CELL = `${CSS_PREFIX}-cell`;\r\nexport const CSS_SELECT_CELL = `${CSS_PREFIX}-select-cell`;\r\nexport const CSS_HEAD = `${CSS_PREFIX}-head`;\r\nexport const CSS_HEAD_STICKY = `${CSS_PREFIX}-head-sticky`;\r\nexport const CSS_RESIZER = `${CSS_PREFIX}-resizer`;\r\nexport const CSS_EDITING = `${CSS_PREFIX}-editing`;\r\nexport const CSS_ACTIVE = `${CSS_PREFIX}-active`;\r\nexport const CSS_SELECTED = `${CSS_PREFIX}-selected`;\r\nexport const CSS_READONLY = `${CSS_PREFIX}-readonly`;\r\n","import { CSS_CELL, CSS_READONLY, CSS_SELECTED, CSS_ACTIVE, CSS_EDITING, CSS_SELECT_CELL } from './css';\r\nimport { createElement, remove, setOptions } from './dom';\r\nimport { CellValue, CellValueOptions } from './options';\r\n\r\nexport type UpdateCallback = (cell: Cell) => unknown;\r\n\r\nexport interface Cell {\r\n    readonly: boolean;\r\n    row: number;\r\n    col: number;\r\n\r\n    /**\r\n     * Cleanup any resources, listeners...\r\n     */\r\n    destroy(): void;\r\n\r\n    /**\r\n     * The currently displayed value.\r\n     */\r\n    value(): string;\r\n\r\n    /**\r\n     * Show a new value.\r\n     */\r\n    set(value: string): void;\r\n\r\n    /**\r\n     * Mark the cell as selected. This will apply css classes\r\n     * to visualize the cell as a selected cell.\r\n     */\r\n    select(doSelect?: boolean): this;\r\n\r\n    /**\r\n     * Cell was selected with select(true).\r\n     */\r\n    selected(): boolean;\r\n\r\n    /**\r\n     * This will apply css classes to visualize the cell as a selected and active cell.\r\n     * The active cell is the leading cell in a multi edit situation. It will contain\r\n     * the editing control.\r\n     * If doActivate is false, the editing control will be removed.\r\n     */\r\n    activate(doActivate?: boolean): this;\r\n\r\n    /**\r\n     * Start the editing process. The cell can use the passed input element to let\r\n     * the user enter free text.\r\n     */\r\n    startEdit(input: HTMLInputElement, selectContent?: boolean);\r\n\r\n    /**\r\n     * This cell has taken control of the input element\r\n     */\r\n    hasInput(): boolean;\r\n}\r\n\r\n/**\r\n * Create a new Cell instance matching the definitions in the value parameter.\r\n * @param callback  Can be used by the cell to notify value changes that are not\r\n *                  triggered from outside.\r\n */\r\nexport function createCell(row: number, col: number, value: CellValue | CellValueOptions, callback: UpdateCallback) {\r\n    if (typeof value !== 'string' && typeof value !== 'number' && Array.isArray(value.options)) {\r\n        return new SelectCell(row, col, value, callback);\r\n    }\r\n    return new InputCell(row, col, value);\r\n}\r\n\r\n\r\nclass InputCell implements Cell {\r\n    element: HTMLElement;\r\n    input: HTMLInputElement;  // If the cell is active, this is the assigned input element\r\n    readonly = false;\r\n\r\n    constructor(public row: number, public col: number, value: CellValue | CellValueOptions) {\r\n        let text: string;\r\n        if (typeof value === 'string' || typeof value === 'number') {\r\n            text = value.toString();\r\n        }\r\n        else {\r\n            this.readonly = value.readonly;\r\n            text = value.value.toString();\r\n        }\r\n        const className = CSS_CELL + (this.readonly ? ' ' + CSS_READONLY : '');\r\n        this.element = createElement(`<div data-ci=\"${col}\" class=\"${className}\">${valueHTML(text)}</div>`);\r\n    }\r\n\r\n    destroy() {\r\n\r\n    }\r\n\r\n    selected() {\r\n        return isSelectCss(this.element);\r\n    }\r\n\r\n    select(doSelect = true) {\r\n        setSelectCSS(this.element, doSelect);\r\n        return this;\r\n    }\r\n\r\n    activate(doActivate = true) {\r\n        const classList = this.element.classList;\r\n        if (doActivate) {\r\n            classList.add(CSS_ACTIVE);\r\n            classList.add(CSS_SELECTED);\r\n        }\r\n        else {\r\n            classList.remove(CSS_ACTIVE);\r\n            classList.remove(CSS_EDITING);\r\n            if (this.input) {\r\n                this.input.blur();\r\n                remove(this.input);\r\n                this.element.innerHTML = valueHTML(this.input.value);\r\n                this.input = null;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    value() {\r\n        return this.input ? this.input.value : this.element.textContent;\r\n    }\r\n\r\n    set(value: string) {\r\n        if (!this.readonly) {\r\n            if (this.input) {\r\n                this.input.value = value;\r\n            }\r\n            else {\r\n                this.element.innerHTML = valueHTML(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    startEdit(input: HTMLInputElement, select = false) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n        const element = this.element;\r\n        this.input = input;\r\n        input.value = element.textContent;\r\n        if (select) {\r\n            input.select();\r\n        }\r\n        input.style.width = element.offsetWidth - 2 + 'px';\r\n        element.classList.add(CSS_EDITING);\r\n        element.innerHTML = '';\r\n        element.appendChild(input);\r\n        input.focus();\r\n    }\r\n\r\n    hasInput() {\r\n        return !!this.input;\r\n    }\r\n}\r\n\r\nfunction valueHTML(value) {\r\n    return `<span>${value}</span>`;\r\n}\r\n\r\nclass SelectCell implements Cell {\r\n    element: HTMLElement;\r\n    selectElement: HTMLSelectElement;\r\n    readonly = false;\r\n    options: ReadonlyArray<CellValue> = null;\r\n    listener;\r\n\r\n    constructor(public row: number, public col: number, value: CellValueOptions, callback: UpdateCallback) {\r\n\r\n        this.readonly = value.readonly;\r\n        this.options = value.options;\r\n\r\n        const className = CSS_CELL + ' ' + CSS_SELECT_CELL + (this.readonly ? ' ' + CSS_READONLY : '');\r\n        this.element = createElement(`<div data-ci=\"${col}\" class=\"${className}\"></div>`);\r\n        this.selectElement = createElement<HTMLSelectElement>(`<select><select>`);\r\n        setOptions(this.selectElement, this.options);\r\n        this.element.appendChild(this.selectElement);\r\n        this.listener = () => callback(this);\r\n        this.selectElement.addEventListener('change', this.listener);\r\n    }\r\n\r\n    destroy() {\r\n        this.selectElement.removeEventListener('change', this.listener);\r\n    }\r\n\r\n    value(): string {\r\n        return this.selectElement.value;\r\n    }\r\n\r\n    set(value: string) {\r\n        this.selectElement.value = value;\r\n    }\r\n\r\n    select(doSelect = true) {\r\n        setSelectCSS(this.element, doSelect);\r\n        return this;\r\n    }\r\n\r\n    selected(): boolean {\r\n        return isSelectCss(this.element);\r\n    }\r\n\r\n    activate(doActivate?: boolean) {\r\n        return this;\r\n    }\r\n\r\n    startEdit(input: HTMLInputElement, selectContent?: boolean) {\r\n\r\n    }\r\n\r\n    hasInput(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction setSelectCSS(element: HTMLElement, doSelect: boolean) {\r\n    const classList = element.classList;\r\n    if (doSelect) {\r\n        classList.add(CSS_SELECTED);\r\n    }\r\n    else {\r\n        classList.remove(CSS_SELECTED);\r\n    }\r\n}\r\n\r\nfunction isSelectCss(element: HTMLElement) {\r\n    return element.className.indexOf(CSS_SELECTED) >= 0;\r\n}\r\n","import { Cell, createCell } from './cell';\r\nimport { CSS_ROW } from './css';\r\nimport { createElement } from './dom';\r\nimport { CellValue, CellValueOptions } from './options';\r\n\r\nexport class Row {\r\n    element: HTMLElement;\r\n    cells: Cell[] = [];\r\n\r\n    constructor(public index: number) {\r\n        this.element = createElement(`<div data-ri=\"${index}\" class=\"${CSS_ROW}\"></div>`);\r\n    }\r\n\r\n    addCells(cells: Array<CellValue | CellValueOptions>, updateValueCallback: (cell: Cell) => unknown) {\r\n        cells.forEach((c, columnIndex) => {\r\n            const cell = createCell(this.index, columnIndex, c, updateValueCallback);\r\n            this.cells.push(cell);\r\n            this.element.appendChild(cell.element);\r\n        });\r\n    }\r\n}\r\n","import { Row } from './row';\r\n\r\nexport interface RenderOptions {\r\n    container: HTMLElement;\r\n    gridContainer: HTMLElement;  // child of container\r\n    grid: HTMLElement;           // child of gridContainer\r\n    head: HTMLElement;\r\n}\r\n\r\nexport interface Renderer {\r\n    rerender(rows: Row[]);\r\n    destroy();\r\n}\r\n\r\nexport class DefaultRenderer implements Renderer {\r\n    constructor(private options: RenderOptions) {\r\n    }\r\n    rerender(rows: Row[]) {\r\n        const { grid, head } = this.options;\r\n        grid.innerHTML = '';\r\n        grid.appendChild(head);\r\n        rows.forEach(r => {\r\n            grid.appendChild(r.element);\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.options = null;\r\n    }\r\n}\r\n\r\n\r\nexport class VirtualRenderer implements Renderer {\r\n\r\n    private onScroll;\r\n\r\n    constructor(private options: RenderOptions) {\r\n    }\r\n\r\n    rerender(rows: Row[]) {\r\n        const { grid, head, container, gridContainer } = this.options;\r\n\r\n        if (this.onScroll) {\r\n            container.removeEventListener('scroll', this.onScroll);\r\n        }\r\n        const itemPadding = 4;\r\n\r\n        const currentRange = {\r\n            start: undefined,\r\n            end: undefined,\r\n        };\r\n\r\n        let rowHeight = 34;  // just a guess\r\n        grid.style.position = 'absolute';\r\n\r\n        const update = (scrollTop: number) => {\r\n            const itemCount = rows.length;\r\n            const viewportHeight = container.offsetHeight;\r\n\r\n            const totalContentHeight = itemCount * rowHeight;\r\n\r\n            let startIndex = Math.floor(scrollTop / rowHeight) - itemPadding;\r\n            if (startIndex % 2 > 0) {\r\n                // always start with an odd index to keep alternating styles consistent\r\n                startIndex -= 1;\r\n            }\r\n            startIndex = Math.max(0, startIndex);\r\n\r\n            let visibleNodesCount = Math.ceil(viewportHeight / rowHeight) + 2 * itemPadding;\r\n            visibleNodesCount = Math.min(itemCount - startIndex, visibleNodesCount);\r\n            const endIndex = startIndex + visibleNodesCount;\r\n\r\n            const offsetY = startIndex * rowHeight;\r\n            gridContainer.style.height = `${totalContentHeight}px`;\r\n            grid.style['top'] = `${offsetY}px`;\r\n\r\n            // Render\r\n            if (currentRange.start !== startIndex || currentRange.end !== endIndex) {\r\n                const desiredRenderHeight = visibleNodesCount * rowHeight; // viewport + padding\r\n                currentRange.start = startIndex;\r\n                currentRange.end = endIndex;\r\n                grid.innerHTML = '';\r\n                grid.appendChild(head);\r\n                let renderedHeight = 0;\r\n                let count = 0;\r\n                for (let i = startIndex; (i <= endIndex || renderedHeight < desiredRenderHeight) && i < rows.length; ++i) {\r\n                    const row = rows[i];\r\n                    grid.appendChild(row.element);\r\n                    renderedHeight += row.element.offsetHeight;\r\n                    ++count;\r\n                }\r\n                if (count) {\r\n                    rowHeight = renderedHeight / count;\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        const updateFunc = update;\r\n        let animationFrame;\r\n        this.onScroll = (e) => {\r\n            if (animationFrame) {\r\n                cancelAnimationFrame(animationFrame);\r\n            }\r\n            animationFrame = requestAnimationFrame(() => {\r\n                updateFunc(e.target.scrollTop);\r\n            });\r\n        };\r\n\r\n        container.addEventListener('scroll', this.onScroll);\r\n        updateFunc(container.scrollTop);\r\n    }\r\n\r\n    destroy() {\r\n        this.options.container.removeEventListener('scroll', this.onScroll);\r\n        this.options = null;\r\n        this.onScroll = null;\r\n    }\r\n}\r\n","import { EventEmitter, EventHandler, EventHandlerBase } from './events';\r\nimport { parseCSV, writeCSV } from './csv';\r\nimport { query, remove, createElement, queryAll, off, on } from './dom';\r\nimport { GridOptions, RowOptions, ScrollOptions } from './options';\r\nimport { Cell } from './cell';\r\nimport { CSS_CELL, CSS_CONTAINER, CSS_CONTAINER_SCROLL, CSS_GRID, CSS_HEAD, CSS_HEAD_STICKY, CSS_RESIZER, CSS_ROW } from './css';\r\nimport { Row } from './row';\r\nimport { DefaultRenderer, Renderer, VirtualRenderer } from './render';\r\n\r\n\r\nexport interface InputArgs {\r\n    grid: Grid;\r\n    row: number;\r\n    col: number;\r\n    value: string;\r\n}\r\n\r\nexport interface SelectArgs {\r\n    grid: Grid;\r\n    selection: Array<{ row: number, col: number }>;\r\n}\r\n\r\n\r\nexport class Grid {\r\n    private container: HTMLElement;\r\n    private grid: HTMLElement;\r\n    private rows: Row[] = [];\r\n    private cells: Cell[] = [];\r\n    private activeCell: Cell;\r\n    private events: EventEmitter = new EventEmitter();\r\n    private options: GridOptions;\r\n    private cellInput: HTMLInputElement;\r\n    private hiddenInput: HTMLElement;\r\n    private cleanups: Array<() => any> = [];\r\n    private render: Renderer;\r\n\r\n    constructor(container: string | HTMLElement, options?: GridOptions) {\r\n        this.container = typeof container === 'string' ? query<HTMLElement>(container) : container;\r\n        if (options) {\r\n            this.init(options);\r\n        }\r\n    }\r\n\r\n    init(options: GridOptions) {\r\n        options.scroll = getScrollOptions(options);\r\n        this.options = options;\r\n        const container = this.container;\r\n        const rows = this.rows;\r\n        container.innerHTML = '';\r\n        rows.length = 0;\r\n\r\n        if (options.input) {\r\n            this.cellInput = typeof options.input === 'function' ? options.input() : options.input;\r\n            remove(this.cellInput);\r\n        }\r\n        else {\r\n            this.cellInput = createElement<HTMLInputElement>(`<input id=\"celled-cell-input\" type=\"text\" >`);\r\n        }\r\n        this.hiddenInput = createElement(\r\n            '<div id=\"celled-hidden-input\" style=\"position:absolute; z-index:-1; left:2px; top: 2px;\" contenteditable tabindex=\"0\"></div>');\r\n\r\n        if (options.scroll) {\r\n            container.classList.add(CSS_CONTAINER_SCROLL);\r\n        }\r\n        const gridContainer = createElement(`<div class=\"${CSS_CONTAINER}\"></div>`);\r\n\r\n        const stickyHeader = options.scroll.stickyHeader;\r\n        const headCss = `${CSS_ROW} ${CSS_HEAD} ${stickyHeader ? CSS_HEAD_STICKY : ''}`;\r\n        const head = createElement(`<div class=\"${headCss}\"></div>`);\r\n        const grid = this.grid = createElement(`<div class=\"${CSS_GRID}\"></div>`);\r\n\r\n        container.appendChild(gridContainer);\r\n        gridContainer.appendChild(this.hiddenInput);\r\n        gridContainer.appendChild(grid);\r\n        options.cols.forEach((c, index) => head.appendChild(this.createHeadCell(c, index)));\r\n\r\n        const renderOptions = { container, gridContainer, grid, head };\r\n        this.render = options.scroll.virtualScroll ? new VirtualRenderer(renderOptions) : new DefaultRenderer(renderOptions);\r\n\r\n        this.createRows();\r\n        this.initMouse();\r\n        this.initKeys();\r\n        this.initClipboard();\r\n        queryAll(head, css(CSS_CELL)).forEach((c: HTMLElement) => {\r\n            c.style.width = c.offsetWidth + 'px';\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.render.destroy();\r\n        this.cleanups.forEach(c => c());\r\n        this.cleanups.length = 0;\r\n        remove(this.grid);\r\n        this.cells.forEach(c => c.destroy());\r\n        this.grid = null;\r\n        this.hiddenInput = null;\r\n        this.cellInput = null;\r\n        this.rows = null;\r\n        this.cells = null;\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener.\r\n     * Grid fires these events:\r\n     * 'input', 'focus', 'select'\r\n     */\r\n    on(event: 'input' | 'focus', handler: EventHandler<InputArgs>);\r\n    on(event: 'select', handler: EventHandler<SelectArgs>);\r\n    on(event: string, handler: EventHandlerBase) {\r\n        this.events.addHandler(event, handler);\r\n    }\r\n\r\n    update(row: number, col: number, value: string) {\r\n        this.setCell(this.rows[row].cells[col], value);\r\n    }\r\n\r\n    addRows(rows: RowOptions[]) {\r\n        if (this.options.canAddRows) {\r\n            [].push.apply(this.options.rows, rows);\r\n            rows.forEach(r => {\r\n                const newRow = this.createAndAddRow(r);\r\n                newRow.cells.forEach(c => this.emitInput(c));\r\n            });\r\n            this.flattenCells();\r\n            this.renderRows();\r\n        }\r\n    }\r\n\r\n    addRow() {\r\n        this.addRows([this.options.cols.map(c => '')]);\r\n    }\r\n\r\n    private createHeadCell(text: string | number, columnIndex: number) {\r\n        const column = createElement(`<div class=\"${CSS_CELL}\" data-ci=\"${columnIndex}\"><span>${text}</span></div>`);\r\n        const resizer = createElement(`<div class=\"${CSS_RESIZER}\"></div>`);\r\n        column.appendChild(resizer);\r\n\r\n        let downPosition = null;\r\n        let nextColumn = null;\r\n        let currentWidth = null;\r\n        let currentNextWidth = null;\r\n        let selection = null;\r\n\r\n        const mousemove = (e: MouseEvent) => {\r\n            if (selection) {\r\n                let col = e.target as Element;\r\n                while (col) {\r\n                    const ciAttr = col.getAttribute('data-ci');\r\n                    const ci = +ciAttr;\r\n                    if (ciAttr !== null && !isNaN(ci)) {\r\n                        const minCol = Math.min(columnIndex, ci);\r\n                        const maxCol = Math.max(columnIndex, ci);\r\n                        if (selection[0] !== minCol || selection[1] !== maxCol) {\r\n                            selection = [minCol, maxCol];\r\n                            this.cells.forEach(c => c.select(c.col >= minCol && c.col <= maxCol));\r\n                            this.emitSelect();\r\n                        }\r\n                        break;\r\n                    }\r\n                    col = col.parentElement;\r\n                }\r\n            }\r\n            else {\r\n                const diff = e.pageX - downPosition;\r\n                if (nextColumn) {\r\n                    nextColumn.style.width = (currentNextWidth - diff) + 'px';\r\n                }\r\n                column.style.width = (currentWidth + diff) + 'px';\r\n            }\r\n        };\r\n\r\n        const mouseup = () => {\r\n            downPosition = null;\r\n            selection = null;\r\n            off(document, 'mousemove', mousemove);\r\n            off(document, 'mouseup', mouseup);\r\n        };\r\n\r\n        on(column, 'mousedown', (e: MouseEvent) => {\r\n            if (e.target === resizer) {\r\n                // Resize columns\r\n                nextColumn = column.nextElementSibling;\r\n                downPosition = e.pageX;\r\n                currentWidth = column.offsetWidth;\r\n                currentNextWidth = nextColumn ? nextColumn.offsetWidth : null;\r\n            }\r\n            else if (this.rows.length) {\r\n                // Select column\r\n                const i = +column.getAttribute('data-ci');\r\n                selection = true;\r\n                this.cells.forEach(c => c.activate(false).select(c.col === i));\r\n                selection = [i, i];\r\n                this.focusHiddenInput();\r\n                this.activeCell = this.rows[0].cells[i];\r\n                this.emitSelect();\r\n            }\r\n            on(document, 'mouseup', mouseup);\r\n            on(document, 'mousemove', mousemove);\r\n            e.preventDefault();\r\n        });\r\n\r\n        return column;\r\n    }\r\n\r\n    private focusHiddenInput() {\r\n        // Focus the hidden input element to receive paste events.\r\n        // Prevent scrolling up if input was blurred at the end of a long table.\r\n        this.hiddenInput.focus({ preventScroll: true });\r\n    }\r\n\r\n    private createAndAddRow(r: RowOptions): Row {\r\n        const row = new Row(this.rows.length);\r\n        row.addCells(r, cell => this.emitInput(cell));\r\n        this.rows.push(row);\r\n        return row;\r\n    }\r\n\r\n    private createRows() {\r\n        this.rows = [];\r\n        this.options.rows.forEach(r => this.createAndAddRow(r));\r\n        this.flattenCells();\r\n        this.renderRows();\r\n    }\r\n\r\n    private renderRows() {\r\n        this.render.rerender(this.rows);\r\n    }\r\n\r\n    private flattenCells() {\r\n        this.cells = this.rows.reduce((a, b) => a.concat(b.cells), [] as Cell[]);\r\n    }\r\n\r\n    private initMouse() {\r\n        let downCellIndex: number;\r\n        let downRowIndex: number;\r\n\r\n        let selectionIdentifier: string = null;\r\n        const rememberSelection = (r1, c1, r2, c2) => '' + r1 + c1 + r2 + c2;\r\n\r\n        const findTargetCell = (cell: Element, level = 0): Cell => {\r\n            if (!cell || !cell.parentElement) {\r\n                return;\r\n            }\r\n            const cellIndexAttr = cell.getAttribute('data-ci');\r\n            if (cellIndexAttr === null && level < 2) {\r\n                return findTargetCell(cell.parentElement, level + 1);\r\n            }\r\n            const rowIndexAttr = cell.parentElement.getAttribute('data-ri');\r\n            const cellIndex = +cellIndexAttr;\r\n            const rowIndex = +rowIndexAttr;\r\n            if (cellIndexAttr && rowIndexAttr && !isNaN(cellIndex) && !isNaN(rowIndex)) {\r\n                return this.rows[rowIndex].cells[cellIndex];\r\n            }\r\n        };\r\n\r\n        const getTargetCell = (e: MouseEvent) => {\r\n            const cell = e.target as Element;\r\n            return findTargetCell(cell);\r\n        };\r\n\r\n        const mousemove = (moveEvent: MouseEvent) => {\r\n            const targetCell = getTargetCell(moveEvent);\r\n            if (targetCell) {\r\n                const rowIndex = targetCell.row;\r\n                const cellIndex = targetCell.col;\r\n                const firstRow = Math.min(rowIndex, downRowIndex);\r\n                const lastRow = Math.max(rowIndex, downRowIndex);\r\n                const firstCol = Math.min(cellIndex, downCellIndex);\r\n                const lastCol = Math.max(cellIndex, downCellIndex);\r\n                const newSelectionIdentifier = rememberSelection(firstRow, firstCol, lastRow, lastCol);\r\n                if (selectionIdentifier !== newSelectionIdentifier) {\r\n                    selectionIdentifier = newSelectionIdentifier;\r\n                    this.unselect();\r\n                    for (let ri = firstRow; ri <= lastRow; ++ri) {\r\n                        for (let ci = firstCol; ci <= lastCol; ++ci) {\r\n                            this.rows[ri].cells[ci].select();\r\n                        }\r\n                    }\r\n                    this.emitSelect();\r\n                }\r\n            }\r\n        };\r\n\r\n        const mouseup = () => {\r\n            off(document, 'mousemove', mousemove);\r\n            off(document, 'mouseup', mouseup);\r\n        };\r\n\r\n        let lastMouseDown = Date.now();\r\n        const cleanupMousedown = on(this.grid, 'mousedown', (e: MouseEvent) => {\r\n            const cell = getTargetCell(e);\r\n            if (cell) {\r\n                const timeSinceLast = Date.now() - lastMouseDown;\r\n                lastMouseDown = Date.now();\r\n                if (cell.hasInput()) {\r\n                    // The cell is already in edit mode. Do nothing and continue with default event handling\r\n                    return;\r\n                }\r\n                else if (cell === this.activeCell && !cell.readonly && timeSinceLast < 300) {\r\n                    // Double click on cell to start edit mode\r\n                    // if (Array.isArray(cell.options)) {\r\n                    //     cell.startSelect(this.cellSelect);\r\n                    // }\r\n                    cell.startEdit(this.cellInput);\r\n                    this.emitFocus();\r\n                }\r\n                else {\r\n                    const rowIndex = cell.row;\r\n                    const cellIndex = cell.col;\r\n                    downRowIndex = rowIndex;\r\n                    downCellIndex = cellIndex;\r\n                    selectionIdentifier = rememberSelection(rowIndex, cellIndex, rowIndex, cellIndex);\r\n                    this.activate(cell);\r\n                    on(document, 'mouseup', mouseup);\r\n                    on(document, 'mousemove', mousemove);\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        });\r\n        this.cleanups.push(cleanupMousedown);\r\n\r\n        const cleanupMouseup = on(document, 'mouseup', (e: MouseEvent) => {\r\n            if (this.activeCell) {\r\n                // Unselect all if was click outside of the grid.\r\n                for (let target = e.target as Node; target; target = target.parentNode) {\r\n                    if (target === this.container) {\r\n                        return;\r\n                    }\r\n                }\r\n                this.activeCell.activate(false);\r\n                if (this.unselect()) {\r\n                    this.emitSelect();\r\n                }\r\n            }\r\n        });\r\n        this.cleanups.push(cleanupMouseup);\r\n    }\r\n\r\n    private activate(cell: Cell, doActivate = true) {\r\n        if (this.activeCell) {\r\n            this.activeCell.activate(false);\r\n        }\r\n        let selectionChanged = false;\r\n        this.cells.forEach(c => {\r\n            selectionChanged = c === cell ? (c.selected() !== doActivate) : (selectionChanged || c.selected());\r\n            c.select(false);\r\n        });\r\n        this.activeCell = cell.select(doActivate).activate(doActivate);\r\n        if (selectionChanged) {\r\n            this.emitSelect();\r\n        }\r\n        this.focusHiddenInput();\r\n    }\r\n\r\n    private moveActive(rowDelta: number, colDelta: number, addRows = false) {\r\n        const activeCell = this.activeCell;\r\n        if (activeCell) {\r\n            const rows = this.rows;\r\n            const rowIndex = activeCell.row + rowDelta;\r\n            while (addRows && this.options.canAddRows && rowIndex >= rows.length) {\r\n                this.addRow();\r\n            }\r\n            const nextRow = rows[rowIndex];\r\n            if (nextRow) {\r\n                const cell = nextRow.cells[activeCell.col + colDelta];\r\n                if (cell) {\r\n                    this.activate(cell);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private initKeys() {\r\n        const hiddenInput = this.hiddenInput;\r\n        const cellInput = this.cellInput;\r\n\r\n        this.cleanups.push(on(hiddenInput, 'keydown', (e: KeyboardEvent) => {\r\n            e = e || window.event as KeyboardEvent;\r\n            const keyCode = e.keyCode;\r\n            if (keyCode === 46) {  // del\r\n                this.cells.forEach(cell => {\r\n                    if (cell.selected()) {\r\n                        this.setCell(cell, '');\r\n                    }\r\n                });\r\n                e.preventDefault();\r\n            }\r\n            if (keyCode === 37) {\r\n                this.moveActive(0, -1);\r\n            }\r\n            if (keyCode === 38) {\r\n                this.moveActive(-1, 0);\r\n            }\r\n            if (keyCode === 39) {\r\n                this.moveActive(0, 1);\r\n            }\r\n            if (keyCode === 40) {\r\n                this.moveActive(1, 0);\r\n            }\r\n        }));\r\n\r\n        const onInput = (e: KeyboardEvent) => {\r\n            const activeCell = this.activeCell;\r\n            if (activeCell && !activeCell.readonly && activeCell.hasInput()) {\r\n                this.updatValue(activeCell);\r\n                this.cells.forEach(cell => {\r\n                    if (cell.selected() && cell !== activeCell) {\r\n                        this.setCell(cell, activeCell.value());\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        this.cleanups.push(on(cellInput, 'input', onInput));\r\n        this.cleanups.push(on(cellInput, 'keydown', (e: KeyboardEvent) => {\r\n            if (e.keyCode === 13) {\r\n                // ENTER, stop edit and move to next row\r\n                this.moveActive(0, 0);\r\n                this.moveActive(1, 0, true);\r\n                e.preventDefault();\r\n            }\r\n            if (e.keyCode === 27) {\r\n                // ESCAPE, stop edit but stay at same cell\r\n                this.moveActive(0, 0);\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n\r\n        this.cleanups.push(on(hiddenInput, 'keypress', (e: KeyboardEvent) => {\r\n            const activeCell = this.activeCell;\r\n            if (activeCell && !activeCell.readonly && !activeCell.hasInput()) {\r\n                activeCell.startEdit(cellInput, true);\r\n                this.emitFocus();\r\n            }\r\n            else {\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n\r\n    pasteCSV(csvText: string, separator: string, startRow?: number, startCol?: number) {\r\n        const csv = parseCSV(csvText, separator);\r\n        const activeCell = this.activeCell;\r\n        if (isNaN(startRow) && !activeCell) {\r\n            return;\r\n        }\r\n        startRow = isNaN(startRow) ? activeCell.row : startRow;\r\n        startCol = isNaN(startCol) ? activeCell.col : startCol;\r\n\r\n        csv.forEach((csvRow, csvRowIndex) => {\r\n            let tableRow = this.rows[startRow + csvRowIndex];\r\n            if (!tableRow && this.options.canAddRows) {\r\n                const prevRow = this.rows[startRow];\r\n                this.addRows([prevRow.cells.map(c => '')]);\r\n                tableRow = this.rows[startRow + csvRowIndex];\r\n            }\r\n            const tableCol = startCol;\r\n            const isLastEmptyRow = csvRow.length === 1 && csvRow[0] === '';\r\n            if (tableRow && !isLastEmptyRow) {\r\n                csvRow.forEach((csvCell, csvColIndex) => {\r\n                    const cell = tableRow.cells[tableCol + csvColIndex];\r\n                    if (cell && !cell.readonly) {\r\n                        this.setCell(cell, csvCell);\r\n                        cell.select();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private initClipboard() {\r\n        on(this.hiddenInput, 'paste', (e: ClipboardEvent) => {\r\n            // Don't actually paste to hidden input\r\n            e.preventDefault();\r\n            const text = (e.clipboardData || (window as any).clipboardData).getData('text');\r\n            this.pasteCSV(text, '\\t');\r\n        });\r\n\r\n        on(this.hiddenInput, 'copy', (e: ClipboardEvent) => {\r\n            e.preventDefault();\r\n            const activeCell = this.activeCell;\r\n            if (!activeCell) {\r\n                return;\r\n            }\r\n\r\n            const csv = [];\r\n            for (let ri = activeCell.row; ; ri++) {\r\n                const row = this.rows[ri];\r\n                const csvRow = [];\r\n                if (!row || !row.cells[activeCell.col] || !row.cells[activeCell.col].selected()) {\r\n                    break;\r\n                }\r\n                for (let ci = activeCell.col; ; ++ci) {\r\n                    const cell = row.cells[ci];\r\n                    if (!cell || !cell.selected()) {\r\n                        break;\r\n                    }\r\n                    csvRow.push(cell.value());\r\n                }\r\n                csv.push(csvRow);\r\n            }\r\n            const clipboard = (e.clipboardData || (window as any).clipboardData);\r\n            clipboard.setData('text/plain', writeCSV(csv, '\\t'));\r\n        });\r\n    }\r\n\r\n    private setCell(cell: Cell, value: string) {\r\n        if (!cell.readonly) {\r\n            cell.set(value);\r\n            this.updatValue(cell);\r\n        }\r\n    }\r\n\r\n    private unselect(): boolean {\r\n        let selectionChanged = false;\r\n        this.cells.forEach(c => {\r\n            selectionChanged = selectionChanged || c.selected();\r\n            c.select(false);\r\n        });\r\n        return selectionChanged;\r\n    }\r\n\r\n    private updatValue(cell: Cell) {\r\n        const colIndex = cell.col;\r\n        const rowOption = this.options.rows[cell.row];\r\n        const cellValue = rowOption[colIndex];\r\n        if (typeof cellValue === 'string' || typeof cellValue === 'number') {\r\n            rowOption[colIndex] = cell.value();\r\n        }\r\n        else {\r\n            cellValue.value = cell.value();\r\n        }\r\n        this.emitInput(cell);\r\n    }\r\n\r\n    private emitInput(cell: Cell) {\r\n        this.events.emit<InputArgs>('input', {\r\n            grid: this,\r\n            col: cell.col,\r\n            row: cell.row,\r\n            value: cell.value(),\r\n        });\r\n    }\r\n\r\n    private emitFocus() {\r\n        const cell = this.activeCell;\r\n        this.events.emit<InputArgs>('focus', {\r\n            grid: this,\r\n            col: cell.col,\r\n            row: cell.row,\r\n            value: cell.value(),\r\n        });\r\n    }\r\n\r\n    private emitSelect() {\r\n        this.events.emit<SelectArgs>('select', {\r\n            grid: this,\r\n            selection: this.cells.filter(c => c.selected()).map(c => ({\r\n                row: c.row,\r\n                col: c.col,\r\n            })),\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction css(className) {\r\n    return '.' + className;\r\n}\r\n\r\nfunction trueOr(value: boolean): boolean {\r\n    return value === false ? false : true;\r\n}\r\n\r\nfunction getScrollOptions(options: GridOptions): ScrollOptions {\r\n    const scroll = options.scroll;\r\n    if (!scroll) {\r\n        return {};\r\n    }\r\n    return {\r\n        enabled: trueOr(scroll.enabled),\r\n        virtualScroll: trueOr(scroll.virtualScroll),\r\n        stickyHeader: trueOr(scroll.stickyHeader),\r\n    };\r\n}\r\n\r\n// ----\r\n"],"names":[],"mappings":"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"}