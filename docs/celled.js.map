{"version":3,"file":"celled.js","sources":["../src/lib/events.ts","../src/lib/csv.ts","../src/lib/dom.ts","../src/lib/css.ts","../src/lib/cell.ts","../src/lib/row.ts","../src/lib/render.ts","../src/lib/grid.ts"],"sourcesContent":["\r\nexport interface EventArgs { }\r\n\r\nexport type EventHandlerBase = (arg: EventArgs) => any;\r\n\r\nexport interface EventHandler<T> extends EventHandlerBase {\r\n    (arg: T): any;\r\n}\r\n\r\nexport class EventEmitter {\r\n    handlers: { [event: string]: EventHandlerBase[] } = {};\r\n\r\n    addHandler(event: string, handler: EventHandlerBase) {\r\n        const handlers = this.handlers;\r\n        handlers[event] = handlers[event] || [];\r\n        handlers[event].push(handler);\r\n    }\r\n\r\n    removeHandler(event: string, handler: EventHandlerBase) {\r\n        const allHandlers = this.handlers;\r\n        const handlers = allHandlers[event];\r\n        if (handlers && handler) {\r\n            handlers.splice(handlers.indexOf(handler), 1);\r\n        }\r\n    }\r\n\r\n    emit<TArgs extends EventArgs>(event: string, args: TArgs) {\r\n        const handlers = this.handlers[event];\r\n        if (handlers) {\r\n           handlers.forEach(handler => {\r\n                try {\r\n                    handler(args);\r\n                }\r\n                catch {}\r\n            });\r\n        }\r\n    }\r\n}\r\n","// ref: https://stackoverflow.com/a/14991797/498298\r\n// This will parse a delimited string into an array of\r\n// arrays. The default delimiter is the comma, but this\r\n// can be overriden in the second argument.\r\nexport function parseCSV(str: string, delimiter: string) {\r\n    const arr: string[][] = [];\r\n    let quote = false;  // 'true' means we're inside a quoted field\r\n\r\n    // Iterate over each character, keep track of current row and column (of the returned array)\r\n    for (let row = 0, col = 0, i = 0; i < str.length; i++) {\r\n        const currentChar = str[i];\r\n        const nextChar = str[i + 1];\r\n        arr[row] = arr[row] || [];             // Create a new row if necessary\r\n        arr[row][col] = arr[row][col] || '';   // Create a new column (start with empty string) if necessary\r\n\r\n        // If the current character is a quotation mark, and we're inside a\r\n        // quoted field, and the next character is also a quotation mark,\r\n        // add a quotation mark to the current column and skip the next character\r\n        if (currentChar === '\"' && quote && nextChar === '\"') {\r\n            arr[row][col] += currentChar;\r\n            ++i;\r\n            continue;\r\n        }\r\n\r\n        // If it's just one quotation mark, begin/end quoted field\r\n        if (currentChar === '\"') {\r\n            quote = !quote;\r\n            continue;\r\n        }\r\n\r\n        // If it's a delimiter and we're not in a quoted field, move on to the next column\r\n        if (currentChar === delimiter && !quote) {\r\n            ++col;\r\n            continue;\r\n        }\r\n\r\n        // If it's a newline (CRLF) and we're not in a quoted field, skip the next character\r\n        // and move on to the next row and move to column 0 of that new row\r\n        if (currentChar === '\\r' && nextChar === '\\n' && !quote) {\r\n            ++row;\r\n            col = 0;\r\n            ++i;\r\n            continue;\r\n        }\r\n\r\n        // If it's a newline (LF or CR) and we're not in a quoted field,\r\n        // move on to the next row and move to column 0 of that new row\r\n        if ((currentChar === '\\n' || currentChar === '\\r') && !quote) {\r\n            ++row;\r\n            col = 0;\r\n            continue;\r\n        }\r\n\r\n        // Otherwise, append the current character to the current column\r\n        arr[row][col] += currentChar;\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\nexport function writeCSV(values: Array<string[]>, separator: string, linebreak = '\\n') {\r\n\r\n    let content = '';\r\n    values.forEach((row, ri) => {\r\n        if (ri > 0) {\r\n            content += linebreak;\r\n        }\r\n        row.forEach((cell, ci) => {\r\n            cell = cell.replace(/\"/g, '\"\"');\r\n            if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n                cell = '\"' + cell + '\"';\r\n            }\r\n            if (ci > 0) {\r\n                content += separator;\r\n            }\r\n            content += cell;\r\n        });\r\n    });\r\n    return content;\r\n\r\n}\r\n","export function query<T = Element>(elOrCss, cssSelector?): T {\r\n    if (!cssSelector) {\r\n        cssSelector = elOrCss;\r\n        elOrCss = document;\r\n    }\r\n    return elOrCss.querySelector(cssSelector);\r\n}\r\n\r\nexport function queryAll<T = Element>(elOrCss, cssSelector?): T[] {\r\n    if (!cssSelector) {\r\n        cssSelector = elOrCss;\r\n        elOrCss = document;\r\n    }\r\n    return [].slice.call(elOrCss.querySelectorAll(cssSelector));\r\n}\r\n\r\nexport function createElement<T extends HTMLElement>(html: string): T {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstChild as T;\r\n}\r\n\r\nexport function on(element: Node, event: string, listener: EventListenerOrEventListenerObject) {\r\n    element.addEventListener(event, listener);\r\n    return offFunc(element, event, listener);\r\n}\r\n\r\nexport function off(element: Node, event: string, listener: EventListenerOrEventListenerObject) {\r\n    element.removeEventListener(event, listener);\r\n}\r\n\r\nexport function offFunc(element: Node, event: string, listener: EventListenerOrEventListenerObject) {\r\n    return () => element.removeEventListener(event, listener);\r\n}\r\n\r\nexport function getKey(e: KeyboardEvent) {\r\n    e = e || window.event as KeyboardEvent;\r\n    return String.fromCharCode(e.keyCode || e.which);\r\n}\r\n\r\nexport function remove(node: Node) {\r\n    if (node.parentNode) {\r\n        node.parentElement.removeChild(node);\r\n    }\r\n}\r\n\r\nexport function setOptions(selectElement: HTMLSelectElement, options: ReadonlyArray<any>) {\r\n    for (let i = selectElement.options.length; i > 0; i--) {\r\n        selectElement.remove(i);\r\n    }\r\n    for (const option of options) {\r\n        const optionElement = document.createElement('option');\r\n        optionElement.value = '' + option;\r\n        optionElement.innerHTML = '' + option;\r\n        selectElement.appendChild(optionElement);\r\n    }\r\n}\r\n","export const CSS_PREFIX = 'ced';\r\nexport const CSS_CONTAINER = `${CSS_PREFIX}-grid-container`;\r\nexport const CSS_CONTAINER_SCROLL = `${CSS_PREFIX}-grid-container-scroll`;\r\nexport const CSS_GRID = `${CSS_PREFIX}-grid`;\r\nexport const CSS_ROW = `${CSS_PREFIX}-row`;\r\nexport const CSS_CELL = `${CSS_PREFIX}-cell`;\r\nexport const CSS_SELECT_CELL = `${CSS_PREFIX}-select-cell`;\r\nexport const CSS_HEAD = `${CSS_PREFIX}-head`;\r\nexport const CSS_HEAD_STICKY = `${CSS_PREFIX}-head-sticky`;\r\nexport const CSS_RESIZER = `${CSS_PREFIX}-resizer`;\r\nexport const CSS_EDITING = `${CSS_PREFIX}-editing`;\r\nexport const CSS_ACTIVE = `${CSS_PREFIX}-active`;\r\nexport const CSS_SELECTED = `${CSS_PREFIX}-selected`;\r\nexport const CSS_READONLY = `${CSS_PREFIX}-readonly`;\r\n","import { CSS_CELL, CSS_READONLY, CSS_SELECTED, CSS_ACTIVE, CSS_EDITING, CSS_SELECT_CELL } from './css';\r\nimport { createElement, remove, setOptions } from './dom';\r\nimport { CellUpdateOptions, CellValue, CellValueOptions } from './options';\r\n\r\nexport type UpdateCallback = (cell: Cell) => unknown;\r\n\r\nexport interface Cell {\r\n\r\n    readonly readonly: boolean;\r\n    row: number;\r\n    col: number;\r\n\r\n    element(): HTMLElement;\r\n\r\n    /**\r\n     * Cleanup any resources, listeners...\r\n     */\r\n    destroy(): void;\r\n\r\n    /**\r\n     * The currently displayed value.\r\n     */\r\n    value(): string;\r\n\r\n    /**\r\n     * Show a new value.\r\n     */\r\n    set(value: CellValue | CellUpdateOptions): void;\r\n\r\n    /**\r\n     * Mark the cell as selected. This will apply css classes\r\n     * to visualize the cell as a selected cell.\r\n     */\r\n    select(doSelect?: boolean): this;\r\n\r\n    /**\r\n     * Cell was selected with select(true).\r\n     */\r\n    selected(): boolean;\r\n\r\n    /**\r\n     * This will apply css classes to visualize the cell as a selected and active cell.\r\n     * The active cell is the leading cell in a multi edit situation. It will contain\r\n     * the editing control.\r\n     * If doActivate is false, the editing control will be removed.\r\n     */\r\n    activate(doActivate?: boolean): this;\r\n\r\n    /**\r\n     * Start the editing process. The cell can use the passed input element to let\r\n     * the user enter free text.\r\n     */\r\n    startEdit(input: HTMLInputElement, selectContent?: boolean);\r\n\r\n    /**\r\n     * This cell is ready to consume key events\r\n     */\r\n    takesKey(): boolean;\r\n\r\n    /**\r\n     * This cell is ready to consume mouse click events\r\n     */\r\n    takesMouse(): boolean;\r\n}\r\n\r\n/**\r\n * Create a new Cell instance matching the definitions in the value parameter.\r\n * @param callback  Can be used by the cell to notify value changes that are not\r\n *                  triggered from outside.\r\n */\r\nexport function createCell(row: number, col: number, value: CellValue | CellValueOptions, callback: UpdateCallback) {\r\n    if (typeof value !== 'string' && typeof value !== 'number' && Array.isArray(value.options)) {\r\n        return new SelectCell(row, col, value, callback);\r\n    }\r\n    return new InputCell(row, col, value);\r\n}\r\n\r\n\r\nclass InputCell implements Cell {\r\n\r\n    input: HTMLInputElement;  // If the cell is active, this is the assigned input element\r\n    readonly = false;\r\n\r\n    private isActive = false;\r\n    private isSelected = false;\r\n    private extraCss = '';\r\n    private val: string;\r\n    private elem: HTMLElement;\r\n\r\n    constructor(public row: number, public col: number, value: CellValue | CellValueOptions) {\r\n        if (isPlainValue(value)) {\r\n            this.val = String(value);\r\n        }\r\n        else {\r\n            this.readonly = value.readonly;\r\n            this.val = String(value.value);\r\n            this.extraCss = value.css;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n    }\r\n\r\n    element(): HTMLElement {\r\n        if (!this.elem) {\r\n            const element = document.createElement('div');\r\n            element.appendChild(valueElement(this.val));\r\n            element.setAttribute('data-ci', String(this.col));\r\n            this.elem = element;\r\n            this.setCss();\r\n        }\r\n        return this.elem;\r\n    }\r\n\r\n    selected() {\r\n        return this.isSelected;\r\n    }\r\n\r\n    select(doSelect = true) {\r\n        this.isSelected = doSelect;\r\n        this.setCss();\r\n        return this;\r\n    }\r\n\r\n    activate(doActivate = true) {\r\n        if (doActivate) {\r\n            this.isActive = this.isSelected = true;\r\n        }\r\n        else {\r\n            this.isActive = false;\r\n            if (this.input) {\r\n                this.input.blur();\r\n                remove(this.input);\r\n                this.elem.innerHTML = '';\r\n                this.elem.appendChild(valueElement(this.input.value));\r\n                this.input = null;\r\n            }\r\n        }\r\n        this.setCss();\r\n        return this;\r\n    }\r\n\r\n    value() {\r\n        return this.input ? this.input.value : this.val;\r\n    }\r\n\r\n    set(value: CellValue | CellUpdateOptions) {\r\n        if (isPlainValue(value)) {\r\n            this.setValue(value);\r\n        }\r\n        else {\r\n            // Update properties only if it's set in value\r\n            if (isDefined(value.value)) {\r\n                this.setValue(value.value);\r\n            }\r\n            this.readonly = isDefined(value.readonly) ? value.readonly : this.readonly;\r\n            this.extraCss = value.css;\r\n            this.setCss();\r\n        }\r\n    }\r\n\r\n    private setValue(value: CellValue) {\r\n        this.val = String(value);\r\n        if (this.input) {\r\n            this.input.value = value.toString();\r\n        }\r\n        else if (this.elem) {\r\n            this.elem.innerHTML = '';\r\n            this.elem.appendChild(valueElement(value));\r\n        }\r\n    }\r\n\r\n    private setCss() {\r\n        const className = CSS_CELL +\r\n            cssIf(this.readonly, CSS_READONLY) +\r\n            cssIf(this.isActive, CSS_ACTIVE) +\r\n            cssIf(this.isSelected, CSS_SELECTED) +\r\n            cssIf(!!this.input, CSS_EDITING) +\r\n            cssIf(!!this.extraCss, this.extraCss);\r\n        if (this.elem) {\r\n            this.elem.className = className;\r\n        }\r\n    }\r\n\r\n    startEdit(input: HTMLInputElement, select = false) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n        const element = this.elem;\r\n        this.input = input;\r\n        input.value = element.textContent;\r\n        if (select) {\r\n            input.select();\r\n        }\r\n        input.style.width = element.offsetWidth - 2 + 'px';\r\n        element.innerHTML = '';\r\n        element.appendChild(input);\r\n        input.focus();\r\n        this.setCss();\r\n    }\r\n\r\n    takesKey(): boolean {\r\n        return !!this.input;\r\n    }\r\n\r\n    takesMouse(): boolean {\r\n        return this.takesKey();\r\n    }\r\n}\r\n\r\nfunction valueElement(value: string|Number) {\r\n    const valueSpan = document.createElement('span');\r\n    valueSpan.appendChild(document.createTextNode(String(value)));\r\n    return valueSpan;\r\n}\r\n\r\nclass SelectCell implements Cell {\r\n\r\n    selectElement: HTMLSelectElement;\r\n    readonly = false;\r\n    options: ReadonlyArray<CellValue> = null;\r\n\r\n    private listener;\r\n    private isSelected = false;\r\n    private extraCss = '';\r\n    private elem: HTMLElement;\r\n\r\n    constructor(public row: number, public col: number, value: CellValueOptions, callback: UpdateCallback) {\r\n\r\n        this.readonly = value.readonly;\r\n        this.options = value.options;\r\n        this.elem = createElement(`<div data-ci=\"${col}\"></div>`);\r\n        this.selectElement = createElement<HTMLSelectElement>(`<select><select>`);\r\n        setOptions(this.selectElement, this.options);\r\n        this.set('' + value.value);\r\n        this.elem.appendChild(this.selectElement);\r\n        this.listener = () => callback(this);\r\n        this.selectElement.addEventListener('change', this.listener);\r\n        this.extraCss = value.css;\r\n        this.setCss();\r\n    }\r\n\r\n    destroy() {\r\n        this.selectElement.removeEventListener('change', this.listener);\r\n    }\r\n\r\n    element(): HTMLElement {\r\n        return this.elem;\r\n    }\r\n\r\n    value(): string {\r\n        return this.selectElement.value;\r\n    }\r\n\r\n    set(value: CellValue | CellUpdateOptions) {\r\n        if (isPlainValue(value)) {\r\n            this.setValue(value);\r\n        }\r\n        else {\r\n            // Update properties only if it's set in value\r\n            if (isDefined(value.value)) {\r\n                this.setValue(value.value);\r\n            }\r\n            this.extraCss = value.css;\r\n            this.setCss();\r\n        }\r\n    }\r\n\r\n    private setValue(value: CellValue) {\r\n        this.selectElement.value = value ? value.toString() : null;\r\n    }\r\n\r\n    private setCss() {\r\n        const className = CSS_CELL + ' ' + CSS_SELECT_CELL +\r\n            cssIf(this.readonly, CSS_READONLY) +\r\n            cssIf(this.isSelected, CSS_SELECTED) +\r\n            cssIf(!!this.extraCss, this.extraCss);\r\n        this.elem.className = className;\r\n    }\r\n\r\n    select(doSelect = true) {\r\n        this.isSelected = doSelect;\r\n        this.setCss();\r\n        return this;\r\n    }\r\n\r\n    selected(): boolean {\r\n        return this.isSelected;\r\n    }\r\n\r\n    activate(doActivate?: boolean) {\r\n        return this;\r\n    }\r\n\r\n    startEdit(input: HTMLInputElement, selectContent?: boolean) {\r\n    }\r\n\r\n    takesKey(): boolean {\r\n        return false;\r\n    }\r\n\r\n    takesMouse(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\n// function setSelectCSS(element: HTMLElement, doSelect: boolean) {\r\n//     const classList = element.classList;\r\n//     if (doSelect) {\r\n//         classList.add(CSS_SELECTED);\r\n//     }\r\n//     else {\r\n//         classList.remove(CSS_SELECTED);\r\n//     }\r\n// }\r\n\r\nfunction isSelectCss(element: HTMLElement) {\r\n    return element.className.indexOf(CSS_SELECTED) >= 0;\r\n}\r\n\r\nfunction isPlainValue(value: CellValue | CellUpdateOptions): value is CellValue {\r\n    return typeof value === 'string' || typeof value === 'number';\r\n}\r\n\r\nfunction isDefined(value: any) {\r\n    return typeof value !== 'undefined';\r\n}\r\n\r\n\r\nfunction cssIf(useValue: boolean, css: string) {\r\n    return useValue ? ' ' + css : '';\r\n}\r\n","import { Cell, createCell } from './cell';\r\nimport { CSS_ROW } from './css';\r\nimport { CellValue, CellValueOptions } from './options';\r\n\r\n\r\nexport interface RowArgs {\r\n    index: number;\r\n    cells: Array<CellValue | CellValueOptions>;\r\n    updateValueCallback: (cell: Cell) => unknown;\r\n}\r\n\r\nexport class Row {\r\n\r\n    cells: Cell[] = [];\r\n    index: number;\r\n\r\n    private elem: HTMLElement;\r\n\r\n    constructor(args: RowArgs) {\r\n        this.index = args.index;\r\n        this.cells = args.cells.map((cell, columnIndex) => createCell(this.index, columnIndex, cell, args.updateValueCallback));\r\n    }\r\n\r\n    element() {\r\n        if (!this.elem) {\r\n            const element = document.createElement('div');\r\n            element.setAttribute('data-ri', String(this.index));\r\n            element.className = CSS_ROW;\r\n            this.elem = element;\r\n            this.cells.forEach(cell => this.elem.appendChild(cell.element()));\r\n        }\r\n        return this.elem;\r\n    }\r\n}\r\n","import { Row } from './row';\r\n\r\nexport interface RenderOptions {\r\n    container: HTMLElement;\r\n    gridContainer: HTMLElement;  // child of container\r\n    grid: HTMLElement;           // child of gridContainer\r\n    head: HTMLElement;\r\n}\r\n\r\nexport interface Renderer {\r\n    rerender(rows: Row[]);\r\n    destroy();\r\n}\r\n\r\nexport class DefaultRenderer implements Renderer {\r\n\r\n    constructor(private options: RenderOptions) {\r\n    }\r\n\r\n    rerender(rows: Row[]) {\r\n        const { grid, head } = this.options;\r\n        grid.innerHTML = '';\r\n        grid.appendChild(head);\r\n        rows.forEach(r => {\r\n            grid.appendChild(r.element());\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.options = null;\r\n    }\r\n}\r\n\r\n\r\nexport class VirtualRenderer implements Renderer {\r\n\r\n    private onScroll;\r\n\r\n    constructor(private options: RenderOptions) {\r\n    }\r\n\r\n    rerender(rows: Row[]) {\r\n        const { grid, head, container, gridContainer } = this.options;\r\n\r\n        if (this.onScroll) {\r\n            container.removeEventListener('scroll', this.onScroll);\r\n        }\r\n        const itemPadding = 4;\r\n\r\n        const current = {\r\n            viewportHeight: undefined,\r\n            itemCount: undefined,\r\n            start: undefined,\r\n            end: undefined,  // last rendered item (including)\r\n        };\r\n\r\n        let rowHeight = 34;  // just a guess\r\n        grid.style.position = 'absolute';\r\n\r\n        const update = (scrollTop: number) => {\r\n            const itemCount = rows.length;\r\n            const viewportHeight = container.offsetHeight;\r\n            const totalContentHeight = itemCount * rowHeight;\r\n\r\n            let startIndex = Math.floor(scrollTop / rowHeight) - itemPadding;\r\n            if (startIndex % 2 > 0) {\r\n                // always start with an odd index to keep alternating styles consistent\r\n                startIndex -= 1;\r\n            }\r\n            startIndex = Math.max(0, startIndex);\r\n\r\n            let visibleNodesCount = Math.ceil(viewportHeight / rowHeight) + 2 * itemPadding;\r\n            visibleNodesCount = Math.min(itemCount - startIndex, visibleNodesCount);\r\n            const endIndex = startIndex + visibleNodesCount - 1;  // last rendered item (including)\r\n            const maxOffsetY = Math.max(0, totalContentHeight - viewportHeight - itemPadding * rowHeight);  // do not go beyond this\r\n            const offsetY = Math.min(maxOffsetY, startIndex * rowHeight);\r\n\r\n            // At the end of the list we will not rerender in order to avoid jumping scrollbar.\r\n            const lastItemIndex = itemCount - 1;\r\n            const lastWasAdded = current.end === lastItemIndex;\r\n            const lastWillBeAdded = endIndex === lastItemIndex;\r\n            const noMoreItemsAvailable = lastWasAdded && lastWillBeAdded;\r\n            const newRangeDiffers = current.start !== startIndex || current.end !== endIndex;\r\n            const heightChanged = viewportHeight !== current.viewportHeight;\r\n            const itemCountChanged = itemCount !== current.itemCount;\r\n            const shouldRerender = itemCountChanged || heightChanged || (newRangeDiffers && !noMoreItemsAvailable);\r\n\r\n            // Render\r\n            if (shouldRerender) {\r\n                const desiredRenderHeight = visibleNodesCount * rowHeight; // viewport + padding\r\n                current.start = startIndex;\r\n                current.end = endIndex;\r\n                current.viewportHeight = viewportHeight;\r\n                current.itemCount = itemCount;\r\n                grid.innerHTML = '';\r\n                grid.appendChild(head);\r\n                const headerHeight = grid.offsetHeight;\r\n                let renderedHeight = 0;\r\n\r\n                // First add items from start to end index at once\r\n                const fragment = document.createDocumentFragment();\r\n                let i = startIndex;\r\n                for (; i <= endIndex && i < rows.length; ++i) {\r\n                    const row = rows[i];\r\n                    fragment.appendChild(row.element());\r\n                }\r\n                grid.appendChild(fragment);\r\n                renderedHeight = grid.offsetHeight - headerHeight;\r\n\r\n                // Add items until we reached the desired height\r\n                for (; renderedHeight < desiredRenderHeight && i < rows.length; ++i) {\r\n                    const row = rows[i];\r\n                    const rowElement = row.element();\r\n                    grid.appendChild(rowElement);\r\n                    renderedHeight += rowElement.offsetHeight;\r\n                }\r\n\r\n                const numberOfRenderedItems = i - startIndex;\r\n                if (numberOfRenderedItems) {\r\n                    rowHeight = renderedHeight / numberOfRenderedItems;\r\n                }\r\n\r\n                gridContainer.style.height = `${totalContentHeight}px`;\r\n                grid.style['top'] = `${offsetY}px`;\r\n            }\r\n        };\r\n\r\n\r\n        const updateFunc = update;\r\n        let animationFrame;\r\n        this.onScroll = (e) => {\r\n            if (animationFrame) {\r\n                cancelAnimationFrame(animationFrame);\r\n            }\r\n            animationFrame = requestAnimationFrame(() => {\r\n                updateFunc(e.target.scrollTop);\r\n            });\r\n        };\r\n\r\n        container.addEventListener('scroll', this.onScroll);\r\n        updateFunc(container.scrollTop);\r\n    }\r\n\r\n    destroy() {\r\n        this.options.container.removeEventListener('scroll', this.onScroll);\r\n        this.options = null;\r\n        this.onScroll = null;\r\n    }\r\n}\r\n","import { EventEmitter, EventHandler, EventHandlerBase } from './events';\r\nimport { parseCSV, writeCSV } from './csv';\r\nimport { query, remove, createElement, queryAll, off, on } from './dom';\r\nimport { CellUpdateOptions, CellValue, CellValueOptions, GridOptions, RowOptions, ScrollOptions } from './options';\r\nimport { Cell } from './cell';\r\nimport { CSS_CELL, CSS_CONTAINER, CSS_CONTAINER_SCROLL, CSS_GRID, CSS_HEAD, CSS_HEAD_STICKY, CSS_RESIZER, CSS_ROW } from './css';\r\nimport { Row } from './row';\r\nimport { DefaultRenderer, Renderer, VirtualRenderer } from './render';\r\n\r\n\r\nexport interface InputArgs {\r\n    grid: Grid;\r\n    row: number;\r\n    col: number;\r\n    value: string;\r\n}\r\n\r\nexport interface SelectArgs {\r\n    grid: Grid;\r\n    selection: Array<{ row: number, col: number }>;\r\n}\r\n\r\n\r\nexport class Grid {\r\n    private container: HTMLElement;\r\n    private grid: HTMLElement;\r\n    private rows: Row[] = [];\r\n    private cells: Cell[] = [];\r\n    private activeCell: Cell;\r\n    private events: EventEmitter = new EventEmitter();\r\n    private options: GridOptions;\r\n    private cellInput: HTMLInputElement;\r\n    private hiddenInput: HTMLElement;\r\n    private cleanups: Array<() => any> = [];\r\n    private render: Renderer;\r\n\r\n    constructor(container: string | HTMLElement, options?: GridOptions) {\r\n        this.container = typeof container === 'string' ? query<HTMLElement>(container) : container;\r\n        if (options) {\r\n            this.init(options);\r\n        }\r\n    }\r\n\r\n    init(options: GridOptions) {\r\n        options.scroll = getScrollOptions(options);\r\n        this.options = options;\r\n        const container = this.container;\r\n        const rows = this.rows;\r\n        container.innerHTML = '';\r\n        rows.length = 0;\r\n\r\n        if (options.input) {\r\n            this.cellInput = typeof options.input === 'function' ? options.input() : options.input;\r\n            remove(this.cellInput);\r\n        }\r\n        else {\r\n            this.cellInput = createElement<HTMLInputElement>(`<input id=\"celled-cell-input\" type=\"text\" >`);\r\n        }\r\n        this.hiddenInput = createElement(\r\n            '<div id=\"celled-hidden-input\" style=\"position:absolute; z-index:-1; left:2px; top: 2px;\" contenteditable tabindex=\"0\"></div>');\r\n\r\n        if (options.scroll) {\r\n            container.classList.add(CSS_CONTAINER_SCROLL);\r\n        }\r\n        const gridContainer = createElement(`<div class=\"${CSS_CONTAINER}\"></div>`);\r\n\r\n        const stickyHeader = options.scroll.stickyHeader;\r\n        const headCss = `${CSS_ROW} ${CSS_HEAD} ${stickyHeader ? CSS_HEAD_STICKY : ''}`;\r\n        const head = createElement(`<div class=\"${headCss}\"></div>`);\r\n        const grid = this.grid = createElement(`<div class=\"${CSS_GRID}\"></div>`);\r\n\r\n        container.appendChild(gridContainer);\r\n        gridContainer.appendChild(this.hiddenInput);\r\n        gridContainer.appendChild(grid);\r\n        options.cols.forEach((c, index) => head.appendChild(this.createHeadCell(c, index)));\r\n\r\n        const renderOptions = { container, gridContainer, grid, head };\r\n        this.render = options.scroll.virtualScroll ? new VirtualRenderer(renderOptions) : new DefaultRenderer(renderOptions);\r\n\r\n        this.createRows();\r\n        this.initMouse();\r\n        this.initKeys();\r\n        this.initClipboard();\r\n        this.resetColumnWidths();\r\n    }\r\n\r\n    destroy() {\r\n        this.render.destroy();\r\n        this.cleanups.forEach(c => c());\r\n        this.cleanups.length = 0;\r\n        remove(this.grid);\r\n        this.cells.forEach(c => c.destroy());\r\n        this.grid = null;\r\n        this.hiddenInput = null;\r\n        this.cellInput = null;\r\n        this.rows = null;\r\n        this.cells = null;\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener.\r\n     * Grid fires these events:\r\n     * 'input', 'focus', 'select'\r\n     */\r\n    on(event: 'input' | 'focus', handler: EventHandler<InputArgs>);\r\n    on(event: 'select', handler: EventHandler<SelectArgs>);\r\n    on(event: string, handler: EventHandlerBase) {\r\n        this.events.addHandler(event, handler);\r\n    }\r\n\r\n    update(rowIndex: number, colIndex: number, value: CellValue | CellUpdateOptions, emit?: boolean) {\r\n        const row = this.rows[rowIndex];\r\n        const cell = row.cells[colIndex];\r\n        if (cell) {\r\n            cell.set(value);\r\n            this.updateValue(cell, emit);\r\n        }\r\n    }\r\n\r\n    addRows(rows: RowOptions[]) {\r\n        [].push.apply(this.options.rows, rows);\r\n        rows.forEach(r => {\r\n            const newRow = this.createAndAddRow(r);\r\n            newRow.cells.forEach(c => this.emitInput(c));\r\n        });\r\n        this.flattenCells();\r\n        this.renderRows();\r\n    }\r\n\r\n    addRow() {\r\n        this.addRows([this.options.cols.map(c => '')]);\r\n    }\r\n\r\n    private resetColumnWidths() {\r\n        const allCells = queryAll(this.container, `${css(CSS_HEAD)} ${css(CSS_CELL)}`);\r\n        allCells.forEach((c: HTMLElement, i) => {\r\n            c.style.width = c.offsetWidth + 'px';\r\n        });\r\n    }\r\n\r\n    private createHeadCell(text: string | number, columnIndex: number) {\r\n        const column = createElement(`<div class=\"${CSS_CELL}\" data-ci=\"${columnIndex}\"><span>${text}</span></div>`);\r\n        const resizer = createElement(`<div class=\"${CSS_RESIZER}\"></div>`);\r\n        column.appendChild(resizer);\r\n\r\n        let downPosition = null;\r\n        let nextColumn = null;\r\n        let currentWidth = null;\r\n        let currentNextWidth = null;\r\n        let selection = null;\r\n\r\n        const mousemove = (e: MouseEvent) => {\r\n            if (selection) {\r\n                let col = e.target as Element;\r\n                while (col) {\r\n                    const ciAttr = col.getAttribute('data-ci');\r\n                    const ci = +ciAttr;\r\n                    if (ciAttr !== null && !isNaN(ci)) {\r\n                        const minCol = Math.min(columnIndex, ci);\r\n                        const maxCol = Math.max(columnIndex, ci);\r\n                        if (selection[0] !== minCol || selection[1] !== maxCol) {\r\n                            selection = [minCol, maxCol];\r\n                            this.cells.forEach(c => c.select(c.col >= minCol && c.col <= maxCol));\r\n                            this.emitSelect();\r\n                        }\r\n                        break;\r\n                    }\r\n                    col = col.parentElement;\r\n                }\r\n            }\r\n            else {\r\n                // column resizing\r\n                const diff = e.pageX - downPosition;\r\n                if (nextColumn) {\r\n                    nextColumn.style.width = (currentNextWidth - diff) + 'px';\r\n                }\r\n                column.style.width = (currentWidth + diff) + 'px';\r\n            }\r\n        };\r\n\r\n        const mouseup = () => {\r\n            downPosition = null;\r\n            selection = null;\r\n            off(document, 'mousemove', mousemove);\r\n            off(document, 'mouseup', mouseup);\r\n            this.resetColumnWidths();\r\n        };\r\n\r\n        on(column, 'mousedown', (e: MouseEvent) => {\r\n            if (e.target === resizer) {\r\n                // Resize columns\r\n                nextColumn = column.nextElementSibling;\r\n                downPosition = e.pageX;\r\n                currentWidth = column.offsetWidth;\r\n                currentNextWidth = nextColumn ? nextColumn.offsetWidth : null;\r\n            }\r\n            else if (this.rows.length) {\r\n                // Select column\r\n                const i = +column.getAttribute('data-ci');\r\n                selection = true;\r\n                this.cells.forEach(c => c.activate(false).select(c.col === i));\r\n                selection = [i, i];\r\n                this.focusHiddenInput();\r\n                this.activeCell = this.rows[0].cells[i];\r\n                this.emitSelect();\r\n            }\r\n            on(document, 'mouseup', mouseup);\r\n            on(document, 'mousemove', mousemove);\r\n            e.preventDefault();\r\n        });\r\n\r\n        return column;\r\n    }\r\n\r\n    private focusHiddenInput() {\r\n        // Focus the hidden input element to receive paste events.\r\n        // Prevent scrolling up if input was blurred at the end of a long table.\r\n        this.hiddenInput.focus({ preventScroll: true });\r\n    }\r\n\r\n    private createAndAddRow(r: RowOptions): Row {\r\n        const row = new Row({\r\n            index: this.rows.length,\r\n            cells: r,\r\n            updateValueCallback: cell => this.emitInput(cell)\r\n        });\r\n        this.rows.push(row);\r\n        return row;\r\n    }\r\n\r\n    private createRows() {\r\n        this.rows = [];\r\n        this.options.rows.forEach(r => this.createAndAddRow(r));\r\n        this.flattenCells();\r\n        this.renderRows();\r\n    }\r\n\r\n    private renderRows() {\r\n        this.render.rerender(this.rows);\r\n    }\r\n\r\n    private flattenCells() {\r\n        this.cells = this.rows.reduce((a, b) => a.concat(b.cells), [] as Cell[]);\r\n    }\r\n\r\n    private initMouse() {\r\n        let downCellIndex: number;\r\n        let downRowIndex: number;\r\n\r\n        let selectionIdentifier: string = null;\r\n        const rememberSelection = (r1, c1, r2, c2) => '' + r1 + c1 + r2 + c2;\r\n\r\n        const findTargetCell = (cell: Element, level = 0): Cell => {\r\n            if (!cell || !cell.parentElement) {\r\n                return;\r\n            }\r\n            const cellIndexAttr = cell.getAttribute('data-ci');\r\n            if (cellIndexAttr === null && level < 2) {\r\n                return findTargetCell(cell.parentElement, level + 1);\r\n            }\r\n            const rowIndexAttr = cell.parentElement.getAttribute('data-ri');\r\n            const cellIndex = +cellIndexAttr;\r\n            const rowIndex = +rowIndexAttr;\r\n            if (cellIndexAttr && rowIndexAttr && !isNaN(cellIndex) && !isNaN(rowIndex)) {\r\n                return this.rows[rowIndex].cells[cellIndex];\r\n            }\r\n        };\r\n\r\n        const getTargetCell = (e: MouseEvent) => {\r\n            const cell = e.target as Element;\r\n            return findTargetCell(cell);\r\n        };\r\n\r\n        const mousemove = (moveEvent: MouseEvent) => {\r\n            const targetCell = getTargetCell(moveEvent);\r\n            if (targetCell) {\r\n                const rowIndex = targetCell.row;\r\n                const cellIndex = targetCell.col;\r\n                const firstRow = Math.min(rowIndex, downRowIndex);\r\n                const lastRow = Math.max(rowIndex, downRowIndex);\r\n                const firstCol = Math.min(cellIndex, downCellIndex);\r\n                const lastCol = Math.max(cellIndex, downCellIndex);\r\n                const newSelectionIdentifier = rememberSelection(firstRow, firstCol, lastRow, lastCol);\r\n                if (selectionIdentifier !== newSelectionIdentifier) {\r\n                    selectionIdentifier = newSelectionIdentifier;\r\n                    this.unselect();\r\n                    for (let ri = firstRow; ri <= lastRow; ++ri) {\r\n                        for (let ci = firstCol; ci <= lastCol; ++ci) {\r\n                            this.rows[ri].cells[ci].select();\r\n                        }\r\n                    }\r\n                    this.emitSelect();\r\n                }\r\n            }\r\n        };\r\n\r\n        const mouseup = () => {\r\n            off(document, 'mousemove', mousemove);\r\n            off(document, 'mouseup', mouseup);\r\n        };\r\n\r\n        let lastMouseDown = Date.now();\r\n        const cleanupMousedown = on(this.grid, 'mousedown', (e: MouseEvent) => {\r\n            const cell = getTargetCell(e);\r\n            if (cell) {\r\n                const timeSinceLast = Date.now() - lastMouseDown;\r\n                lastMouseDown = Date.now();\r\n                if (cell.takesMouse()) {\r\n                    // The cell is already in edit mode. Do nothing and continue with default event handling\r\n                    return;\r\n                }\r\n                else if (cell === this.activeCell && !cell.readonly && timeSinceLast < 300) {\r\n                    // Double click on cell to start edit mode\r\n                    // if (Array.isArray(cell.options)) {\r\n                    //     cell.startSelect(this.cellSelect);\r\n                    // }\r\n                    cell.startEdit(this.cellInput);\r\n                    this.emitFocus();\r\n                }\r\n                else {\r\n                    const rowIndex = cell.row;\r\n                    const cellIndex = cell.col;\r\n                    downRowIndex = rowIndex;\r\n                    downCellIndex = cellIndex;\r\n                    selectionIdentifier = rememberSelection(rowIndex, cellIndex, rowIndex, cellIndex);\r\n                    this.activate(cell);\r\n                    on(document, 'mouseup', mouseup);\r\n                    on(document, 'mousemove', mousemove);\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        });\r\n        this.cleanups.push(cleanupMousedown);\r\n\r\n        const cleanupMouseup = on(document, 'mouseup', (e: MouseEvent) => {\r\n            if (this.activeCell) {\r\n                // Unselect all if was click outside of the grid.\r\n                for (let target = e.target as Node; target; target = target.parentNode) {\r\n                    if (target === this.container) {\r\n                        return;\r\n                    }\r\n                }\r\n                this.activeCell.activate(false);\r\n                if (this.unselect()) {\r\n                    this.emitSelect();\r\n                }\r\n            }\r\n        });\r\n        this.cleanups.push(cleanupMouseup);\r\n    }\r\n\r\n    private activate(cell: Cell, doActivate = true) {\r\n        if (this.activeCell) {\r\n            this.activeCell.activate(false);\r\n        }\r\n        let selectionChanged = false;\r\n        this.cells.forEach(c => {\r\n            selectionChanged = c === cell ? (c.selected() !== doActivate) : (selectionChanged || c.selected());\r\n            c.select(false);\r\n        });\r\n        this.activeCell = cell.select(doActivate).activate(doActivate);\r\n        if (selectionChanged) {\r\n            this.emitSelect();\r\n        }\r\n        this.focusHiddenInput();\r\n    }\r\n\r\n    private moveActive(rowDelta: number, colDelta: number, addRows = false) {\r\n        const activeCell = this.activeCell;\r\n        if (activeCell) {\r\n            const rows = this.rows;\r\n            const rowIndex = activeCell.row + rowDelta;\r\n            while (addRows && this.options.canAddRows && rowIndex >= rows.length) {\r\n                this.addRow();\r\n            }\r\n            const nextRow = rows[rowIndex];\r\n            if (nextRow) {\r\n                const cell = nextRow.cells[activeCell.col + colDelta];\r\n                if (cell) {\r\n                    this.activate(cell);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private initKeys() {\r\n        const hiddenInput = this.hiddenInput;\r\n        const cellInput = this.cellInput;\r\n\r\n        this.cleanups.push(on(hiddenInput, 'keydown', (e: KeyboardEvent) => {\r\n            e = e || window.event as KeyboardEvent;\r\n            const keyCode = e.keyCode;\r\n            if (keyCode === 46) {  // del\r\n                this.cells.forEach(cell => {\r\n                    if (cell.selected()) {\r\n                        this.setCell(cell, '');\r\n                    }\r\n                });\r\n                e.preventDefault();\r\n            }\r\n            if (keyCode === 37) {\r\n                this.moveActive(0, -1);\r\n            }\r\n            if (keyCode === 38) {\r\n                this.moveActive(-1, 0);\r\n            }\r\n            if (keyCode === 39) {\r\n                this.moveActive(0, 1);\r\n            }\r\n            if (keyCode === 40) {\r\n                this.moveActive(1, 0);\r\n            }\r\n        }));\r\n\r\n        const onInput = (e: KeyboardEvent) => {\r\n            const activeCell = this.activeCell;\r\n            if (activeCell && !activeCell.readonly && activeCell.takesKey()) {\r\n                this.updateValue(activeCell, true);\r\n                this.cells.forEach(cell => {\r\n                    if (cell.selected() && cell !== activeCell) {\r\n                        this.setCell(cell, activeCell.value());\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        this.cleanups.push(on(cellInput, 'input', onInput));\r\n        this.cleanups.push(on(cellInput, 'keydown', (e: KeyboardEvent) => {\r\n            if (e.keyCode === 13) {\r\n                // ENTER, stop edit and move to next row\r\n                this.moveActive(0, 0);\r\n                this.moveActive(1, 0, true);\r\n                e.preventDefault();\r\n            }\r\n            if (e.keyCode === 27) {\r\n                // ESCAPE, stop edit but stay at same cell\r\n                this.moveActive(0, 0);\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n\r\n        this.cleanups.push(on(hiddenInput, 'keypress', (e: KeyboardEvent) => {\r\n            const activeCell = this.activeCell;\r\n            if (activeCell && !activeCell.readonly && !activeCell.takesKey()) {\r\n                activeCell.startEdit(cellInput, true);\r\n                this.emitFocus();\r\n            }\r\n            else {\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n\r\n    pasteCSV(csvText: string, separator: string, startRow?: number, startCol?: number) {\r\n        const csv = parseCSV(csvText, separator);\r\n        const activeCell = this.activeCell;\r\n        if (isNaN(startRow) && !activeCell) {\r\n            return;\r\n        }\r\n        startRow = isNaN(startRow) ? activeCell.row : startRow;\r\n        startCol = isNaN(startCol) ? activeCell.col : startCol;\r\n\r\n        csv.forEach((csvRow, csvRowIndex) => {\r\n            let tableRow = this.rows[startRow + csvRowIndex];\r\n            if (!tableRow && this.options.canAddRows) {\r\n                const prevRow = this.rows[startRow];\r\n                this.addRows([prevRow.cells.map(c => '')]);\r\n                tableRow = this.rows[startRow + csvRowIndex];\r\n            }\r\n            const tableCol = startCol;\r\n            const isLastEmptyRow = csvRow.length === 1 && csvRow[0] === '';\r\n            if (tableRow && !isLastEmptyRow) {\r\n                csvRow.forEach((csvCell, csvColIndex) => {\r\n                    const cell = tableRow.cells[tableCol + csvColIndex];\r\n                    if (cell && !cell.readonly) {\r\n                        this.setCell(cell, csvCell);\r\n                        cell.select();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private initClipboard() {\r\n        on(this.hiddenInput, 'paste', (e: ClipboardEvent) => {\r\n            // Don't actually paste to hidden input\r\n            e.preventDefault();\r\n            const text = (e.clipboardData || (window as any).clipboardData).getData('text');\r\n            this.pasteCSV(text, '\\t');\r\n        });\r\n\r\n        on(this.hiddenInput, 'copy', (e: ClipboardEvent) => {\r\n            e.preventDefault();\r\n            const activeCell = this.activeCell;\r\n            if (!activeCell) {\r\n                return;\r\n            }\r\n\r\n            const csv = [];\r\n            for (let ri = activeCell.row; ; ri++) {\r\n                const row = this.rows[ri];\r\n                const csvRow = [];\r\n                if (!row || !row.cells[activeCell.col] || !row.cells[activeCell.col].selected()) {\r\n                    break;\r\n                }\r\n                for (let ci = activeCell.col; ; ++ci) {\r\n                    const cell = row.cells[ci];\r\n                    if (!cell || !cell.selected()) {\r\n                        break;\r\n                    }\r\n                    csvRow.push(cell.value());\r\n                }\r\n                csv.push(csvRow);\r\n            }\r\n            const clipboard = (e.clipboardData || (window as any).clipboardData);\r\n            clipboard.setData('text/plain', writeCSV(csv, '\\t'));\r\n        });\r\n    }\r\n\r\n    private setCell(cell: Cell, value: string) {\r\n        if (!cell.readonly) {\r\n            cell.set(value);\r\n            this.updateValue(cell, true);\r\n        }\r\n    }\r\n\r\n    private unselect(): boolean {\r\n        let selectionChanged = false;\r\n        this.cells.forEach(c => {\r\n            selectionChanged = selectionChanged || c.selected();\r\n            c.select(false);\r\n        });\r\n        return selectionChanged;\r\n    }\r\n\r\n    private updateValue(cell: Cell, emit: boolean) {\r\n        const colIndex = cell.col;\r\n        const rowOption = this.options.rows[cell.row];\r\n        const cellValue = rowOption[colIndex];\r\n        if (typeof cellValue === 'string' || typeof cellValue === 'number') {\r\n            rowOption[colIndex] = cell.value();\r\n        }\r\n        else {\r\n            cellValue.value = cell.value();\r\n        }\r\n        if (emit) {\r\n            this.emitInput(cell);\r\n        }\r\n    }\r\n\r\n    private emitInput(cell: Cell) {\r\n        this.events.emit<InputArgs>('input', {\r\n            grid: this,\r\n            col: cell.col,\r\n            row: cell.row,\r\n            value: cell.value(),\r\n        });\r\n    }\r\n\r\n    private emitFocus() {\r\n        const cell = this.activeCell;\r\n        this.events.emit<InputArgs>('focus', {\r\n            grid: this,\r\n            col: cell.col,\r\n            row: cell.row,\r\n            value: cell.value(),\r\n        });\r\n    }\r\n\r\n    private emitSelect() {\r\n        this.events.emit<SelectArgs>('select', {\r\n            grid: this,\r\n            selection: this.cells.filter(c => c.selected()).map(c => ({\r\n                row: c.row,\r\n                col: c.col,\r\n            })),\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction css(className) {\r\n    return '.' + className;\r\n}\r\n\r\nfunction trueOr(value: boolean): boolean {\r\n    return value === false ? false : true;\r\n}\r\n\r\nfunction getScrollOptions(options: GridOptions): ScrollOptions {\r\n    const scroll = options.scroll;\r\n    if (!scroll) {\r\n        return {};\r\n    }\r\n    return {\r\n        enabled: trueOr(scroll.enabled),\r\n        virtualScroll: trueOr(scroll.virtualScroll),\r\n        stickyHeader: trueOr(scroll.stickyHeader),\r\n    };\r\n}\r\n\r\n// ----\r\n"],"names":[],"mappings":"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"}